* Notes
** network/WebSocket.h is a candidate but public calls have to be on a cocos thread??
   #include <network/WebSocket.h>
** Cocos Threading
   http://discuss.cocos2d-x.org/t/thread-safety-in-cocos2d-x/23557/3
** TODO Clean Builds?
   http://discuss.cocos2d-x.org/t/how-to-clean-a-build-using-cocos-console/23177
* Dependencies
** cpprest
   https://github.com/Microsoft/cpprestsdk
*** Cmake
if ( MACOSX OR APPLE )
  include_directories(
  /usr/local/Cellar/cpprestsdk/2.9.1/include
)
endif( MACOSX OR APPLE )

*** OSX
    #+begin_src sh :tangle yes
    brew install cpprestsdk
    #+end_src
*** Ubuntu
    #+begin_src sh :tangle yes
    sudo apt-get install libcpprest-dev
    #+end_src
*** Example
    #+begin_src c++ :tangle yes
    using namespace web::websockets::client;
    websocket_client client;
    client.connect("ws://echo.websocket.org").wait();

    websocket_outgoing_message out_msg;
    out_msg.set_utf8_message("test");
    client.send(out_msg).wait();

    client.receive()
        .then([](websocket_incoming_message in_msg) {
            return in_msg.extract_string();
        })
        .then([](std::string body) {
            std::cout << body << std::endl; // test
        })
        .wait();

    client.close().wait();
    #+end_src
* iOS/Mac
** Checking for configuration
   #+begin_src sh_ :tangle yes
james:proj.ios_mac/ (master) $ xcodebuild -list
Information about project "flappy":
    Targets:
        flappy-mobile
        flappy-desktop

    Build Configurations:
        Debug
        Release

    If no build configuration is specified and -scheme is not passed then "Debug" is used.

    Schemes:
        flappy-mobile
        flappy-desktop
        libcocos2d Mac
        libcocos2d iOS
        libcocos2d tvOS
   #+end_src
** Debugging with LLDB
   #+begin_src  :tangle yes
lldb attach -n 'flappy-mobile' --wait-for
   #+end_src
